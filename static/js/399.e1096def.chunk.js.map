{"version":3,"file":"static/js/399.e1096def.chunk.js","mappings":"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","sources":["components/Contacts/ContactsForm/ContactsForm.styled.js","redux/contacts/contacts-selectors.js","components/Contacts/ContactsForm/ContactsForm.jsx","components/Contacts/ContactsListItem/ContactsListItem.jsx","components/Contacts/ContactsList/ContactsList.styled.js","components/Contacts/ContactsList/ContactsList.jsx","components/Contacts/Filter/Filter.styled.js","components/Contacts/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    margin-top: 20px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n`;","export const selectContactsArray = state => state.contactsState.contacts.items;\nexport const selectFilterString = state => state.filterState.filter;\nexport const selectFetchError = state => state.contactsState.contacts.error;\nexport const selectIsLoadingState = state => state.contactsState.contacts.isLoading;\n","import { Form } from './ContactsForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsArray } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { TextField, Button } from '@mui/material';\n\nexport function ContactsForm() {\n  const contacts = useSelector(selectContactsArray);\n  const dispatch = useDispatch();\n\n  const handleContactAdd = evt => {\n    const { name, number } = evt.target;\n    evt.preventDefault();\n    if (contacts.some(item => item.name === name.value)) {\n      alert(`${name.value} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name: name.value, number: number.value }));\n    }\n    evt.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleContactAdd}>\n      <TextField\n        name=\"name\"\n        type=\"text\"\n        label=\"Name\"\n        color=\"primary\"\n        size=\"small\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        focused\n      />\n      <TextField\n        name=\"number\"\n        type=\"tel\"\n        label=\"Number\"\n        color=\"primary\"\n        size=\"small\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        focused\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        Add contact\n      </Button>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { ListItem, IconButton, ListItemText } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport function ContactsListItem(props) {\n  const { id, name, number } = props.item;\n  const dispatch = useDispatch();\n\n  const handleContactDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ListItem\n      secondaryAction={\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={handleContactDelete}\n        >\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemText primary={`${name}`} secondary={`${number}`} />\n    </ListItem>\n  );\n}\n\nContactsListItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  width: 95%;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { ContactsListItem } from 'components/Contacts/ContactsListItem/ContactsListItem';\nimport { List } from './ContactsList.styled';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContactsArray,\n  selectFilterString,\n} from 'redux/contacts/contacts-selectors';\n\n\n\nexport function ContactsList() {\n  const contacts = useSelector(selectContactsArray);\n  const filterString = useSelector(selectFilterString);\n\n  return (\n    <List>\n      {contacts\n        .filter(item => item.name.toLowerCase().includes(filterString))\n        .map(item => {\nreturn <ContactsListItem key={item.id} item={item} />;\n        })}\n    </List>\n  );\n}\n\n// <List>\n//   {contacts\n//     .filter(item => item.name.toLowerCase().includes(filterString))\n//     .map(item => {\n//       return <ContactsListItem key={item.id} item={item} />;\n//     })}\n// </List>\n","import styled from \"styled-components\";\n\nexport const FilterWrap = styled.div`\n    margin-top: 15px;\n    margin-bottom: 15px;\n`;","import { FilterWrap } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filter-slice';\nimport { TextField } from '@mui/material';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handleContactFind = evt => {\n    dispatch(filterContacts(evt.currentTarget.value));\n  };\n\n  return (\n    <FilterWrap>\n      <TextField\n        onChange={handleContactFind}\n        type=\"text\"\n        label=\"Find contacts by name\"\n        color=\"primary\"\n        size=\"small\"\n        focused\n      />\n    </FilterWrap>\n  );\n}\n","import { ContactsForm } from 'components/Contacts/ContactsForm/ContactsForm';\nimport { ContactsList } from 'components/Contacts/ContactsList/ContactsList';\nimport { Filter } from 'components/Contacts/Filter/Filter';\nimport { Loading } from 'components/Loading/Loading';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectFetchError, selectIsLoadingState } from 'redux/contacts/contacts-selectors';\nimport { toast } from 'react-toastify';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoadingState);\n  const dispatch = useDispatch();\n  const error = useSelector(selectFetchError);\n  \n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    toast.error(error);\n  }, [error]);\n    \n  return (\n    <main>\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading ? <Loading /> : <ContactsList />}\n    </main>\n  );\n};\nexport default ContactsPage;\n"],"names":["Form","styled","selectContactsArray","state","contactsState","contacts","items","selectFilterString","filterState","filter","selectFetchError","error","selectIsLoadingState","isLoading","ContactsForm","useSelector","dispatch","useDispatch","onSubmit","evt","target","name","number","preventDefault","some","item","value","alert","addContact","reset","TextField","type","label","color","size","pattern","title","required","focused","Button","variant","ContactsListItem","props","id","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","Delete","ListItemText","primary","secondary","List","ContactsList","filterString","toLowerCase","includes","map","FilterWrap","Filter","onChange","filterContacts","currentTarget","useEffect","fetchContacts","toast","Loading"],"sourceRoot":""}